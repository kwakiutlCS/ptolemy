
<section class="name_getter">
  
  <p>Inserir nome, <%= session[:name] %></p>
  <%= form_tag("/static_pages/set_name", remote:true, method: "get") do %>
  <%= text_field_tag(:name, nil, id:"student_name_field") %>
  <%= submit_tag(:ok, id:"student_name_submit", class:"btn btn-success") %>
  <% end %>
</section>


<section class="background">
  <% if session[:deadline] %>
  <div class="alert alert-info">
  Esta tarefa será discutida na aula de <%= session[:deadline].strftime("%d/%m") %>. Deverá ser concluída antes dessa data.
  </div>
  <% end %>
<h1>O aquecimento da piscina</h1>

<p>Nesta atividade procura investigar os custos de manutenção de uma piscina. Numa primeira fase, estamos interessados em saber, qual a energia necessária para aquecer a água de uma piscina da temperatura ambiente (cerca de 15ºC neste momento) até 26ºC. <br />
Esta questão será resolvida facilmente com a colaboração dos teus colegas. </p>

<div class="btn-group">
<a type="button" class="thermo_button btn btn-primary" id="thermo_background_next">Seguinte</a>
</div>
</section>



<section class="strategy">
  <h2>Estratégia</h2>
  <div>
  Responder a esta questão poderá ser feito tendo a piscina, e aquecendo a água até aos 26ºC. Assim poderíamos, por exemplo, controlar os gastos energéticos pela fatura da eletricidade. Claro que para istso teríamos de ter a piscina! Seria melhor se pudessemos estimar os gastos de eletricidade sem termos de instalá-la.
  <br />
  
  Vamos usar um processo em que testamos o problema em pequena escala (aquecendo pequenas quantidades de água) e tentamos descobrir padrões que nos permitam tirar conclusões sobre o caso maior. Chama-se a isto construir um modelo.
  </div>

  
   
  <div class="btn-group">
    <a type="button" class="thermo_button btn btn-primary" id="thermo_strategy_previous">Anterior</a>
    <a type="button" class="thermo_button btn btn-primary" id="thermo_strategy_next">Seguinte</a>
  </div>
</section>



<section class="data-gathering row">
  
<script type="text/paperscript" canvas="canvas">
	  

var calor = new Raster("calorimeter");
calor.position = view.center;



var water = new Path();

water.closed = true;

water.fillColor = new Color(0,0,1,0.3);

water.add(new Point(77,461));
water.add(new Point(90,469));
water.add(new Point(120,473));
water.add(new Point(160,475));
water.add(new Point(300,475));
water.add(new Point(337,469));
water.add(new Point(350,461));

water.add(new Point(350,407));
water.add(new Point(337,404));
water.add(new Point(300,401));
water.add(new Point(160,401));
water.add(new Point(120,403));
water.add(new Point(90,404));
water.add(new Point(77,407));

var y_scale = 0.005555556;
var base = 0.5;
var height = 150/base/1000/y_scale;
var time = 0;
var temperature = 15.0;
var mass = 0;
var animate = false;
var rho = 1;
var P = 500;
var c_water = 4180;
var dt;
var Q;

var top = new Path.Ellipse(new Rectangle(77,399,273,22));
top.fillColor = new Color(0,0,1,0.3);



function onFrame(evt) {
    
    dt = evt.delta;

    if (animate) {
	 time += dt;
	 $("#chrono").text(time.toFixed(1)+ " s");
	 	 
	 Q = P * dt;
	 
	 mass = getMass(base, height*y_scale, rho);
	 
        temperature += (Q/(mass*c_water)*(1.8-(Math.random()*1.6)));
	 
	 $("#thermo").text((Math.round(temperature*2)/2).toFixed(1)+ " ºC");
	 if (temperature > 60) {
	     reset();
	 }
    }
}

$(document).ready(function() {
    
    $("#onoff").on("click", function() {
	 mass = getMass(base, height*y_scale, rho);
	 if ($(this).text() == "Aquecer") {
            $(this).text("Parar");
	     animate = true;
            $("#volume_slider").slider("disable");
	 }
	 else {
	     $(this).text("Aquecer");
	     animate = false;
        }
	 
	 
    });

    $("#restart").on("click", function() {
	 reset();
	 
    });

    $("#volume_slider").on("slide", function(evt, ui) {
	 $("#volume").html(ui.value+" cm<sup>3</sup>");
        var diff = (height-(ui.value/(base*1000)/y_scale));
        height -= diff;
        top.bounds.y += diff;
        for (var k in water.segments) {
           if (k >= 7)
	      water.segments[k].point.y += diff;
           }
    });
});


function getMass(base, h, rho) {
    return base*h*rho;
}

function reset() {
    temperature = 15.0;
	 mass = 0;
	 time = 0;
	 animate = false;
	 $("#onoff").text("Aquecer");
	 $("#chrono").text("0.0 s");
	 $("#thermo").text("15.0 ºC");
	 $("#volume").html("150 cm<sup>3</sup>");   
        
	 top.bounds.y += (height-(150/base/1000/y_scale));
	 
	 for (var k in water.segments) {
	     if (k >= 7)
		  water.segments[k].point.y += (height-(150/base/1000/y_scale));
	 }
	 
	 height = 150/base/1000/y_scale;
        $("#volume_slider").slider("value", 150);
        $("#volume_slider").slider("enable");
}


	</script>
        
        
    <div class="thermo_data_form span4">
      <%= form_tag(data_points_path, remote: true) do %>
         <%= hidden_field_tag(:energy, nil,  id:"thermo_energy_field") %>
         <table class="table table-striped">
	    <theader>
	      <tr><th>Volume(cm<sup>3</sup>)</th><th>Tempo(s)</th><th>Energy(kJ)</th><th></th></tr>
	    </theader>
	    <tbody id="thermo_data_collection">
	      
	    <%= render "tbody" %>
	    <tbody>
	  </table>
         
	  
	  
	  
      <% end %>

    </div>
    <div class="thermo_animation span8">
    <canvas id="canvas" width=400 height=500></canvas>
   
    <div id="controls">
    <div >
      <div id="volume" class="monitor">150 cm<sup>3</sup></div>
    <div id="volume_slider"></div>
    
    <div id="chrono" class="monitor">0.0 s</div>
    <div id="thermo" class="monitor">15.0 ºC</div>
    
    </div>
    
    <div class="btn-group">
    <button type="button" class="thermo_button btn btn-default" id="onoff">Aquecer</button>
    <button type="button" class="btn btn-default" id="restart">Reiniciar</button>
    </div>
    </div>
    </div>
    <img src="assets/calorimeter.png" class="paper_img" id="calorimeter"></img>


    <div class="btn-group">
    <a type="button" class="thermo_button btn btn-primary" id="thermo_data-gathering_previous">Anterior</a>
    <a type="button" class="thermo_button btn btn-primary" id="thermo_data-gathering_next">Seguinte</a>
  </div>
</section>


<section class="model-choice">
  

  <div id="thermo_graph"></div>
  <div class="btn-group">
    <a type="button" class="thermo_button btn btn-primary" id="thermo_model-choice_previous">Anterior</a>
    <a type="button" class="thermo_button btn btn-primary" id="thermo_model-choice_next">Seguinte</a>
  </div>

  <script>
    $.plot($("#thermo_graph"), [
    {
     data: [],
     points: { show: true },
    
     
    }
  ],
    {
     xaxis: { min:0, max: 800},
     yaxis: { min:0}
    }
  );
  </script>
</section>


<section class="questions">


</section>

